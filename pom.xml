<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
  <parent>
    <groupId>org.ow2.mind</groupId>
    <artifactId>mind-compiler</artifactId>
    <version>2.2-SNAPSHOT</version>
  </parent>

  <name>examples</name>
  <description>Mindc Examples</description>
  
  <artifactId>examples</artifactId>

  <packaging>pom</packaging>
  
 
  <build>
        <plugins>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <!-- Generates binary assemblies at package phase. -->
                    <execution>
                        <id>bin-packages</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <descriptors>
                                <descriptor>src/assemble/bin-release.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- User documentation generation -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
                <inherited>false</inherited>
                <executions>
                    <execution>
                        <id>copy-docbook-resources</id>
                        <!-- here the phase you need -->
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <inherited>false</inherited>
                        <configuration>
                            <outputDirectory>${project.build.directory}/site/images</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/src/images</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.agilejava.docbkx</groupId>
                <artifactId>docbkx-maven-plugin</artifactId>
                <inherited>false</inherited>
                <executions>
                    <!-- User Guide PDF execution -->
                    <execution>
                        <id>pdf</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate-pdf</goal>
                        </goals>
                        <inherited>false</inherited>
                        <configuration>
                            <targetDirectory>${project.build.directory}/site</targetDirectory>
                            <foCustomization>${project.build.directory}/site/xsl/minddoc-fo.xsl</foCustomization>
                            <draftWatermarkImage>${project.build.directory}/site/images/draft.png</draftWatermarkImage>
                        </configuration>
                    </execution>
                    <!-- User Guide HTML executions -->
                    <execution>
                        <id>html-printable</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate-html</goal>
                        </goals>
                        <inherited>false</inherited>
                        <configuration>
                            <targetDirectory>${project.build.directory}/site/printable</targetDirectory>
                            <imgSrcPath>../</imgSrcPath>
                            <htmlCustomization>${project.build.directory}/site/xsl/minddoc-html-printable.xsl</htmlCustomization>
                            <htmlStylesheet>../css/docbook-printable.css</htmlStylesheet>
                        </configuration>
                    </execution>
                    <execution>
                        <id>userguide-html</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate-html</goal>
                        </goals>
                        <inherited>false</inherited>
                        <configuration>
                            <includes>mindc-examples.xml</includes>
                            <targetDirectory>${project.build.directory}/site</targetDirectory>
                            <htmlCustomization>${project.build.directory}/site/xsl/minddoc-html.xsl</htmlCustomization>
                            <htmlStylesheet>css/docbook.css</htmlStylesheet>
                            <customizationParameters>
                                <parameter>
                                    <name>root.path</name>
                                    <value>.</value>
                                </parameter>
                                <parameter>
                                    <name>pdf.link</name>
                                    <value>mindc-examples.pdf</value>
                                </parameter>
                                <parameter>
                                    <name>chunked.link</name>
                                    <value>userGuide/mindc-examples.html</value>
                                </parameter>
                                <parameter>
                                    <name>printable.link</name>
                                    <value>printable/mindc-examples.html</value>
                                </parameter>
                            </customizationParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>userguide-html-chunked</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate-html</goal>
                        </goals>
                        <inherited>false</inherited>
                        <configuration>
                            <includes>mindc-examples.xml</includes>
                            <chunkedOutput>true</chunkedOutput>
                            <targetDirectory>${project.build.directory}/site/userGuide</targetDirectory>
                            <imgSrcPath>../</imgSrcPath>
                            <htmlCustomization>${project.build.directory}/site/xsl/minddoc-chunk.xsl</htmlCustomization>
                            <htmlStylesheet>../css/docbook-chunk.css</htmlStylesheet>
                            <customizationParameters>
                                <parameter>
                                    <name>root.path</name>
                                    <value>..</value>
                                </parameter>
                                <parameter>
                                    <name>pdf.link</name>
                                    <value>../mindc-examples.pdf</value>
                                </parameter>
                                <parameter>
                                    <name>single.link</name>
                                    <value>../mindc-examples.html</value>
                                </parameter>
                                <parameter>
                                    <name>printable.link</name>
                                    <value>../printable/mindc-examples.html</value>
                                </parameter>
                            </customizationParameters>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
		    <sourceDirectory>${basedir}/src/docbkx</sourceDirectory>
                    <targetDirectory>${project.build.directory}/site</targetDirectory>
                </configuration>
            </plugin>
        </plugins>
    </build>
    
    <profiles>
        <profile>
            <id>src-packages</id>
            <activation>
                <property>
                    <name>mindRelease</name>
                    <value>true</value>
                </property>
            </activation>

            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>src-packages</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <descriptors>
                                        <descriptor>src/assemble/src-release.xml</descriptor>
                                    </descriptors>
                                    <tarLongFileMode>gnu</tarLongFileMode>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>local-install</id>
            <activation>
                <property>
                    <name>local-install</name>
                </property>
            </activation>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>install-local</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>${project.groupId}</groupId>
                                            <artifactId>${project.artifactId}</artifactId>
                                            <version>${project.version}</version>
                                            <type>tar.gz</type>
                                            <classifier>bin</classifier>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${local-install}</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>release</id>
            <activation>
                <property>
                    <name>mindRelease</name>
                    <value>true</value>
                </property>
            </activation>

            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <inherited>false</inherited>
                        <executions>
                            <execution>
                                <id>upload assemblies</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <!-- This Ant task will deploy assembly files 
                                            on the OW2 forge in order to release them on the "File" section of the forge. -->
                                        <scp todir="${ow2.username}@${ow2.hostname}:${ow2.file.deploy.dir}" verbose="true" passphrase="" keyfile="${user.home}/.ssh/id_rsa">
                                            <fileset dir="${project.build.directory}">
                                                <include name="*.tar.bz2" />
                                                <include name="*.tar.gz" />
                                                <include name="*.zip" />
                                            </fileset>
                                        </scp>
                                    </tasks>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.apache.ant</groupId>
                                <artifactId>ant-jsch</artifactId>
                                <version>1.7.0</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>test-deploy</id>

            <properties>
                <ow2.file.deploy.dir>/tmp/mind/incomming</ow2.file.deploy.dir>
            </properties>
        </profile>

    </profiles>
  
</project>
